{
    "version": "https://jsonfeed.org/version/1",
    "title": "人生几何 • All posts by \"php\" tag",
    "description": "",
    "home_page_url": "https://RenshengJi.github.io",
    "items": [
        {
            "id": "https://renshengji.github.io/2023/03/05/ctf-1/",
            "url": "https://renshengji.github.io/2023/03/05/ctf-1/",
            "title": "一道ctf小题",
            "date_published": "2023-03-05T04:52:03.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>直接上源码：</p>\n<div class=\"highlight-container\" data-rel=\"Php\"><figure class=\"iseeu highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">error_reporting</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$num</span> = <span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;num&#x27;</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"title function_ invoke__\">preg_match</span>(<span class=\"string\">&quot;/\\&#x27;|\\&quot;|\\`| |&lt;|&gt;|?|\\^|%|\\$/&quot;</span>, <span class=\"variable\">$num</span>)) &#123;</span><br><span class=\"line\">           <span class=\"keyword\">die</span>(<span class=\"string\">&quot;nononno&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"keyword\">eval</span>(<span class=\"string\">&quot;return $&#123;num&#125; != 2;&quot;</span>) &amp;&amp; <span class=\"variable\">$num</span> == <span class=\"number\">0</span> &amp;&amp; <span class=\"title function_ invoke__\">is_numeric</span>(<span class=\"variable\">$num</span>) != <span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\"> <span class=\"title function_ invoke__\">system</span>(<span class=\"string\">&#x27;cat flag.php&#x27;</span>);</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\"> <span class=\"keyword\">echo</span> <span class=\"string\">&#x27;2&#x27;</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n\n<p>分析：我们需要同时满足if表达式中的三个条件</p>\n<div class=\"highlight-container\" data-rel=\"Php\"><figure class=\"iseeu highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">eval</span>(<span class=\"string\">&quot;return $&#123;num&#125; != 2;&quot;</span>) &amp;&amp; <span class=\"variable\">$num</span> == <span class=\"number\">0</span> &amp;&amp; <span class=\"title function_ invoke__\">is_numeric</span>(<span class=\"variable\">$num</span>) != <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure></div>\n\n<ul>\n<li><p>第二个条件：要求get到的num弱等于0</p>\n<ul>\n<li><p>弱等于比较时，会先将字符串转换为数字，其转换方式就是截取开头的数字，不过还有两种特殊情况如下：</p>\n<ul>\n<li><p>如果没有数字，即就是一个纯字符串的话，转化为0</p>\n</li>\n<li><p>如果这个字符串恰好是一个科学技术法的表达式，会将此字符串按科学技术法转换为数字</p>\n</li>\n</ul>\n</li>\n<li><p>示例代码如下：</p>\n</li>\n</ul>\n  <div class=\"highlight-container\" data-rel=\"Php\"><figure class=\"iseeu highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">var_dump</span>(<span class=\"string\">&quot;admin&quot;</span>==<span class=\"number\">0</span>);  <span class=\"comment\">//true</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">var_dump</span>(<span class=\"string\">&quot;1admin&quot;</span>==<span class=\"number\">1</span>); <span class=\"comment\">//true</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">var_dump</span>(<span class=\"string\">&quot;2admin&quot;</span>==<span class=\"number\">2</span>); <span class=\"comment\">//true</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">var_dump</span>(<span class=\"string\">&quot;ad1min&quot;</span>==<span class=\"number\">1</span>); <span class=\"comment\">//false</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">var_dump</span>(<span class=\"string\">&quot;admin1&quot;</span>==<span class=\"number\">1</span>); <span class=\"comment\">//false</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">var_dump</span>(<span class=\"string\">&quot;admin1&quot;</span>==<span class=\"number\">0</span>); <span class=\"comment\">//true</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">var_dump</span>(<span class=\"number\">0e1234</span> == <span class=\"number\">0e56789</span>); <span class=\"comment\">//true </span></span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure></div>\n</li>\n<li><p>第三个条件：要求get到的num不是数字类型</p>\n<ul>\n<li>这个很好说，只要不是纯数字就可以了</li>\n</ul>\n</li>\n<li><p>第一个条件：让<code>$&#123;num&#125;!=2</code>返回1</p>\n<ul>\n<li><p>背景知识：</p>\n<ul>\n<li><p>eval()的返回值一般是<code>NULL</code>，除非执行的表达式是<code>return</code>，这种情况下，eval()的返回值就是return的值</p>\n</li>\n<li><p>php中的运算符优先级（跟Cpp基本一样哈）中比较运算的优先级大于双目位运算</p>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>根据条件3，我们输入的一定不是一个纯数字，所以要满足第一个条件的话，我们就必须考虑如php里面运算符的优先级和结合性，以便于能够成功输出</p>\n<ul>\n<li><p>方法一：<code>num=0|1</code></p>\n</li>\n<li><p>方法二：<code>num=0^0</code></p>\n</li>\n</ul>\n<p>…知道了思路，方案肯定是有非常多的，在此就不列举了</p>\n",
            "tags": [
                "php"
            ]
        },
        {
            "id": "https://renshengji.github.io/2023/03/05/ctf-2/",
            "url": "https://renshengji.github.io/2023/03/05/ctf-2/",
            "title": "一道ctf小题（2）",
            "date_published": "2023-03-05T04:52:03.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>直接上源码：</p>\n<div class=\"highlight-container\" data-rel=\"Php\"><figure class=\"iseeu highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">show_source</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\"><span class=\"variable\">$username</span>  = <span class=\"string\">&quot;this_is_secret&quot;</span>; </span><br><span class=\"line\"><span class=\"variable\">$password</span>  = <span class=\"string\">&quot;this_is_not_known_to_you&quot;</span>; </span><br><span class=\"line\"><span class=\"keyword\">include</span>(<span class=\"string\">&quot;flag.php&quot;</span>);<span class=\"comment\">//here I changed those two </span></span><br><span class=\"line\"><span class=\"variable\">$info</span> = <span class=\"keyword\">isset</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;info&#x27;</span>])? <span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;info&#x27;</span>]: <span class=\"string\">&quot;&quot;</span> ;</span><br><span class=\"line\"><span class=\"variable\">$data_unserialize</span> = <span class=\"title function_ invoke__\">unserialize</span>(<span class=\"variable\">$info</span>);</span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"variable\">$data_unserialize</span>[<span class=\"string\">&#x27;username&#x27;</span>]==<span class=\"variable\">$username</span>&amp;&amp;<span class=\"variable\">$data_unserialize</span>[<span class=\"string\">&#x27;password&#x27;</span>]==<span class=\"variable\">$password</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"variable\">$flag</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">&quot;username or password error!&quot;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure></div>\n\n<h2 id=\"前置知识\"><a href=\"#前置知识\" class=\"headerlink\" title=\"前置知识\"></a>前置知识</h2><h3 id=\"反序列化\"><a href=\"#反序列化\" class=\"headerlink\" title=\"反序列化\"></a>反序列化</h3><pre><code>- serialize()函数用于序列化对象或数组，并返回一个字符串。\n- 函数序列化对象后，可以很方便的将它传递给其他需要它的地方，且其类型和结构不会改变。\n- 例子：\n\n    <div class=\"highlight-container\" data-rel=\"Php\"><figure class=\"iseeu highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span> </span><br><span class=\"line\"><span class=\"variable\">$a</span> = [</span><br><span class=\"line\"><span class=\"string\">&#x27;username&#x27;</span> =&gt; <span class=\"literal\">true</span>,</span><br><span class=\"line\"><span class=\"string\">&#x27;password&#x27;</span> =&gt; <span class=\"literal\">true</span></span><br><span class=\"line\">];</span><br><span class=\"line\"><span class=\"variable\">$info</span> = <span class=\"title function_ invoke__\">serialize</span>(<span class=\"variable\">$a</span>);</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"variable\">$info</span>;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br><span class=\"line\"><span class=\"comment\"># a:2:&#123;s:8:&quot;username&quot;;b:1;s:8:&quot;password&quot;;b:1;&#125;</span></span><br></pre></td></tr></table></figure></div>\n    \n- unserialize()函数就是将序列化后的字符串反序列化成数组的过程\n</code></pre>\n<ul>\n<li>233<br>2</li>\n</ul>\n",
            "tags": [
                "php"
            ]
        }
    ]
}
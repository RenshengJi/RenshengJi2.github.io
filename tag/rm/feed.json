{
    "version": "https://jsonfeed.org/version/1",
    "title": "人生几何 • All posts by \"rm\" tag",
    "description": "",
    "home_page_url": "https://RenshengJi.github.io",
    "items": [
        {
            "id": "https://renshengji.github.io/2023/06/27/nx-deploy/",
            "url": "https://renshengji.github.io/2023/06/27/nx-deploy/",
            "title": "北洋机甲视觉组—Jetson Xavier NX部署过程",
            "date_published": "2023-06-27T15:48:03.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><h3 id=\"开始之前—注意事项\"><a href=\"#开始之前—注意事项\" class=\"headerlink\" title=\"[开始之前—注意事项]\"></a>[开始之前—注意事项]</h3><p>本教程只适合于正版NX，如果你使用的是盗版NX，请立即将其扔掉</p>\n<h3 id=\"开始之前—需要的设备\"><a href=\"#开始之前—需要的设备\" class=\"headerlink\" title=\"[开始之前—需要的设备]\"></a>[开始之前—需要的设备]</h3><p>1.一台可以科学上网的个人电脑</p>\n<p>2.一个NX，以及其充电器</p>\n<p>3.一张sd卡（根据自己的电脑查看是否需要读卡器）</p>\n<p>4.显示屏，显示屏充电线，充电头</p>\n<p>5.连接显示屏与NX的线（NX支持DP&#x2F;Hdmi输出，还需结合你的显示屏支持什么输入）</p>\n<p>6.键盘，鼠标</p>\n<p>7.沉着，冷静，小心</p>\n<h3 id=\"安装操作系统\"><a href=\"#安装操作系统\" class=\"headerlink\" title=\"[安装操作系统]\"></a>[安装操作系统]</h3><p>注意，NX没有内置外存，而是选择让我们使用外接sd卡当作外存。</p>\n<h4 id=\"1-在官网下载镜像\"><a href=\"#1-在官网下载镜像\" class=\"headerlink\" title=\"1. 在官网下载镜像\"></a>1. 在官网下载镜像</h4><p><a class=\"link\"   href=\"https://developer.nvidia.com/embedded/downloads\" >nvidia-Jetson下载中心 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></p>\n<p>如果要安装18.04的ubuntu，可以选择下载Jetson Xavier NX Developer Kit SD Card Image 4.6</p>\n<h4 id=\"2-将镜像烧录到sd卡中\"><a href=\"#2-将镜像烧录到sd卡中\" class=\"headerlink\" title=\"2. 将镜像烧录到sd卡中\"></a>2. 将镜像烧录到sd卡中</h4><p>请参考<a class=\"link\"   href=\"https://developer.nvidia.com/embedded/learn/get-started-jetson-xavier-nx-devkit#write\" >Write Image to the microSD Card <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></p>\n<p>根据你的操作系统类型选择不同的方法</p>\n<h4 id=\"3-将sd卡插入NX中，接上电源，开机，设置ubuntu操作系统\"><a href=\"#3-将sd卡插入NX中，接上电源，开机，设置ubuntu操作系统\" class=\"headerlink\" title=\"3. 将sd卡插入NX中，接上电源，开机，设置ubuntu操作系统\"></a>3. 将sd卡插入NX中，接上电源，开机，设置ubuntu操作系统</h4><p>注意，为了方便队伍内协同工作，账号密码统一设置为tjurm</p>\n<h3 id=\"安装环境\"><a href=\"#安装环境\" class=\"headerlink\" title=\"[安装环境]\"></a>[安装环境]</h3><h4 id=\"1-联网\"><a href=\"#1-联网\" class=\"headerlink\" title=\"1.联网\"></a>1.联网</h4><h4 id=\"2-换源\"><a href=\"#2-换源\" class=\"headerlink\" title=\"2.换源\"></a>2.换源</h4><p>首先，换源需要根据咱们电脑的ubuntu系统版本以及指令集体系结构去进行选择。</p>\n<p>查看ubuntu系统版本的方式：</p>\n<div class=\"highlight-container\" data-rel=\"Bash\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">lsb_release -a</span><br></pre></td></tr></table></figure></div>\n\n<p>查看体系架构的方式：</p>\n<div class=\"highlight-container\" data-rel=\"Bash\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">uname</span> -m</span><br></pre></td></tr></table></figure></div>\n\n<p>然后根据查找到的这两种信息去CSDN查询</p>\n<p>eg： 我们拿到的官方Jetson Xavier NX，应该查询：ubuntu 18.04 arm换源</p>\n<p>这里提供快速对ubuntu_18.04_arm进行换源(华为源)的方法：</p>\n<div class=\"highlight-container\" data-rel=\"Bash\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo wget -O /etc/apt/sources.list https://repo.huaweicloud.com/repository/conf/Ubuntu-Ports-bionic.list</span><br><span class=\"line\">sudo apt-get update</span><br></pre></td></tr></table></figure></div>\n\n<h4 id=\"3-安装jtop\"><a href=\"#3-安装jtop\" class=\"headerlink\" title=\"3.安装jtop\"></a>3.安装jtop</h4><p>因为我们需要使用pip3来安装jtop，所以需要在系统中先安装pip3</p>\n<div class=\"highlight-container\" data-rel=\"Bash\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt install python3-pip</span><br></pre></td></tr></table></figure></div>\n\n<p>接着安装jtop</p>\n<div class=\"highlight-container\" data-rel=\"Bash\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo -H pip3 install -U jetson-stats</span><br></pre></td></tr></table></figure></div>\n\n<p>重启系统</p>\n<div class=\"highlight-container\" data-rel=\"Plaintext\"><figure class=\"iseeu highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">reboot</span><br></pre></td></tr></table></figure></div>\n\n<p>使用jtop</p>\n<div class=\"highlight-container\" data-rel=\"Bash\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">jtop</span><br></pre></td></tr></table></figure></div>\n\n<p>查看当前cpu，gpu使用状态（点击最下面一行的2GPU&#x2F;3CPU即可）</p>\n<p>设置风扇状态（点击最下面一行的6CTRL，选择manual人工控制，在speed后点击’+‘直到100%）</p>\n<h4 id=\"4-安装大恒相机驱动\"><a href=\"#4-安装大恒相机驱动\" class=\"headerlink\" title=\"4.安装大恒相机驱动\"></a>4.安装大恒相机驱动</h4><p><a class=\"link\"   href=\"https://www.daheng-imaging.com/downloads/\" >大恒图像软件下载 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></p>\n<p>下载Galaxy Linux-armhf-Gige-U3 SDK_CN-EN 以及  Galaxy Linux-Python SDK_CN-EN</p>\n<p>解压后按照readme中提示安装！</p>\n<p>注意，Galaxy Linux-armhf-Gige-U3 SDK_CN-EN的安装可能需要输入如下指令：</p>\n<div class=\"highlight-container\" data-rel=\"Bash\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bash ./Galaxy_camera.run</span><br></pre></td></tr></table></figure></div>\n\n<p>注意，Galaxy Linux-Python SDK_CN-EN要装适配python3的，在readme文档下面，别装2.7的</p>\n<h4 id=\"5-eigen的安装与软链接\"><a href=\"#5-eigen的安装与软链接\" class=\"headerlink\" title=\"5.eigen的安装与软链接\"></a>5.eigen的安装与软链接</h4><p>安装:</p>\n<div class=\"highlight-container\" data-rel=\"Bash\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt install libeigen3-dev</span><br></pre></td></tr></table></figure></div>\n\n<p>链接：</p>\n<div class=\"highlight-container\" data-rel=\"Bash\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /usr/include</span><br><span class=\"line\">sudo <span class=\"built_in\">ln</span> -sf eigen3/Eigen Eigen</span><br><span class=\"line\">sudo <span class=\"built_in\">ln</span> -sf eigen3/unsupported unsupported</span><br></pre></td></tr></table></figure></div>\n\n<h4 id=\"6-从gitee上下载咱们代码\"><a href=\"#6-从gitee上下载咱们代码\" class=\"headerlink\" title=\"6.从gitee上下载咱们代码\"></a>6.从gitee上下载咱们代码</h4><p>地址：<a class=\"link\"   href=\"https://gitee.com/tju-rm-cv\" >https://gitee.com/tju-rm-cv <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></p>\n<h4 id=\"7-vscode安装\"><a href=\"#7-vscode安装\" class=\"headerlink\" title=\"7.vscode安装\"></a>7.vscode安装</h4><p>下载debian包，网页打开</p>\n<div class=\"highlight-container\" data-rel=\"Plaintext\"><figure class=\"iseeu highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://update.code.visualstudio.com/1.66.1/linux-deb-arm64/stable</span><br></pre></td></tr></table></figure></div>\n\n<p>进入到下载目录，输入：</p>\n<div class=\"highlight-container\" data-rel=\"Bash\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt install ./code...</span><br></pre></td></tr></table></figure></div>\n\n<h4 id=\"8-ssh配置\"><a href=\"#8-ssh配置\" class=\"headerlink\" title=\"8.ssh配置\"></a>8.ssh配置</h4><p>请参照<a class=\"link\"   href=\"https://blog.csdn.net/weixin_44197719/article/details/119888235\" >Ubuntu: 配置ssh，保姆级教程 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a>，注意这里面要用到vim，请自行学习！</p>\n<p>SSH免密登录可以通过在客户端和服务器之间设置公钥认证来实现。具体步骤如下：</p>\n<p>在客户端生成公钥和私钥。可以使用以下命令生成：</p>\n<div class=\"highlight-container\" data-rel=\"Plaintext\"><figure class=\"iseeu highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa</span><br></pre></td></tr></table></figure></div>\n\n<p>该命令将生成一个RSA密钥对，包括公钥和私钥。按照提示输入文件名和密码（可选），如果不需要密码则直接回车即可。</p>\n<p>将客户端公钥复制到服务器上的authorized_keys文件中。可以使用以下命令将公钥复制到服务器上：</p>\n<div class=\"highlight-container\" data-rel=\"Plaintext\"><figure class=\"iseeu highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-copy-id username@servername</span><br></pre></td></tr></table></figure></div>\n\n<p>其中，username是服务器上的用户名，servername是服务器的主机名或IP地址。该命令会将公钥自动添加到服务器上的~&#x2F;.ssh&#x2F;authorized_keys文件中。</p>\n<p>这样，就设置完成啦，以后ssh连接就不用输入密码了！</p>\n<h4 id=\"9-ros环境配置\"><a href=\"#9-ros环境配置\" class=\"headerlink\" title=\"9.ros环境配置\"></a>9.ros环境配置</h4><p>请参照<a class=\"link\"   href=\"https://blog.csdn.net/m0_37715028/article/details/106070815\" >ROS安装教程(ubuntu18.04+melodic版本) <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a>，建议安装桌面完整版！</p>\n<h4 id=\"10-ros-cv-bridge环境配置\"><a href=\"#10-ros-cv-bridge环境配置\" class=\"headerlink\" title=\"10.ros cv_bridge环境配置\"></a>10.ros cv_bridge环境配置</h4><p>请参照<a class=\"link\"   href=\"https://zhuanlan.zhihu.com/p/392939687\" >解决cv_bridge和opencv之间版本匹配问题 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a>与<a class=\"link\"   href=\"https://blog.csdn.net/qq_33980935/article/details/123132452\" >Jetson xavier NX &#x2F; ubuntu18.04 &#x2F;ros melodic&#x2F;python3安裝使用cv_bridge <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></p>\n<p>ps1:按第一个走的话，在编译的时候会出错，所以在编译前需要按照第二个博客改几个地方！</p>\n<p>Ps2:使用cv_bridge的时候一定要按照第一个博客指定cv_bridge的cmake位置！！</p>\n<h4 id=\"11-NX升频\"><a href=\"#11-NX升频\" class=\"headerlink\" title=\"11.NX升频\"></a>11.NX升频</h4><p>首先，cpu主频越高，处理能力越好。然而，Nvidia Jetson系列所有的设备cpu主频均不高，远低于pc机，更可恶的是，Jetson系列设备默认没有给到满频运行，需要我们手动设置，以便让其运行的稍微再快一点！</p>\n<div class=\"highlight-container\" data-rel=\"Bash\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo vi /etc/nvpmodel.conf</span><br></pre></td></tr></table></figure></div>\n\n<p>将里面的MAX_FREQ全部改成1907200，这就可以实现手动升频啦awa</p>\n<p>[注意这里的数值每种设备都不一样啊，这里以Jetson Xavier Nx为例，其他设备请自查]</p>\n<h4 id=\"12-安装带cuda的opencv\"><a href=\"#12-安装带cuda的opencv\" class=\"headerlink\" title=\"12.安装带cuda的opencv\"></a>12.安装带cuda的opencv</h4><p>在安装之前，请先确认你是否有安装带cuda opencv的必要，请参考<a class=\"link\"   href=\"https://blog.csdn.net/libaineu2004/article/details/129801112\" >一文彻底搞懂为什么OpenCV用GPU&#x2F;cuda跑得比用CPU慢？ <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></p>\n<p>完整安装方法请看<a class=\"link\"   href=\"https://zhuanlan.zhihu.com/p/411901208\" >Jetson Xavier NX OpenCV 安装 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></p>\n",
            "tags": [
                "rm"
            ]
        },
        {
            "id": "https://renshengji.github.io/2023/04/24/rm-1/",
            "url": "https://renshengji.github.io/2023/04/24/rm-1/",
            "title": "中心投影！",
            "date_published": "2023-04-24T06:28:13.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>由于工业相机所拍摄图片实际上是三维空间-&gt;二维成像平面的<strong>中心投影</strong>而不是平心投影，故原有的很多<strong>先验条件</strong>（灯条识别与灯条匹配）是不成立的。</p>\n<p>以下为失效的先验条件：</p>\n<ul>\n<li>判断两个灯条的相对位置，源码如下：</li>\n</ul>\n<div class=\"highlight-container\" data-rel=\"C++\"><figure class=\"iseeu highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*  该指标的含义为：</span></span><br><span class=\"line\"><span class=\"comment\"> * \t1. 先将两个灯条的中心点垂直映射到 两个灯条的平均方向上的直线上</span></span><br><span class=\"line\"><span class=\"comment\"> * \t2. 然后计算两个灯条的中心点在这条直线上的投影距离</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">float</span> <span class=\"title\">Offset</span><span class=\"params\">(<span class=\"type\">const</span> Light&amp; x, <span class=\"type\">const</span> Light&amp; y)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">float</span> angle = <span class=\"built_in\">Verticality</span>(x, y) * CV_PI / <span class=\"number\">180.0</span>;</span><br><span class=\"line\">\t<span class=\"comment\">/* 灯条中心偏移向量 */</span></span><br><span class=\"line\">\t<span class=\"type\">float</span> dx = y.rect.center.x - x.rect.center.x;</span><br><span class=\"line\">\t<span class=\"type\">float</span> dy = y.rect.center.y - x.rect.center.y;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"built_in\">abs</span>(<span class=\"built_in\">cos</span>(angle) * <span class=\"built_in\">abs</span>(dx) - <span class=\"built_in\">sin</span>(angle) * <span class=\"built_in\">abs</span>(dy));</span><br><span class=\"line\">\t<span class=\"comment\">// return abs(cos(angle) * dx - sin(angle) * dy);</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n\n<p><strong>失效原因</strong>：虽然说在实际的三维立体世界中，上述条件是肯定有效的，但是，我们是在二维成像平面中去判断的，即使从三维空间-&gt;二维成像平面的过程是平行投影，这个条件也不成立，更何况是中心投影了！</p>\n<p><strong>失效后果</strong>：本来这个先验条件的设置应该是为了过滤掉如下图所示的情况，实际情况可能也还好，但是这样的话，由于这个先验条件本来就是错误的，它并不能正确有效的反映出二维平面投影下装甲板的真实特征，所以有一些正确的灯条匹配会因为这个<strong>错误的先验条件</strong>而被过滤！！</p>\n<p><img src=\"/images/IMG_3941.jpg\" alt=\"Test\"></p>\n<p><strong>解决方案</strong>：</p>\n<p>a) 直接使用类似上交的四点模型，进行纯深度学习识别，完全抛弃传统视觉，直接避开这个问题？</p>\n<p>b) 读君神的代码（因为现在已知君神的代码是使用的纯传统视觉），或者说直接询问，看看他是这么解决的！</p>\n<p>c) 继续使用现有方案，但是要将阈值调到一个合适的值（能过滤掉大部分假装甲板，又不至于将大量的真装甲板过滤掉！）</p>\n<p>d) 训练一个良好的神经网络，其输出能够大致保证框且仅框出一个装甲板，这样的话我们发现就不需要保留这个先验条件了（因为这个先验条件所解决的问题已经不会出现了，所以这个先验条件也可以随之消失了！！）</p>\n",
            "tags": [
                "rm"
            ]
        },
        {
            "id": "https://renshengji.github.io/2023/04/04/nx-flash/",
            "url": "https://renshengji.github.io/2023/04/04/nx-flash/",
            "title": "NX刷机教程",
            "date_published": "2023-04-04T15:48:03.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>直接上结论：使用售后客服的方案awa<br>AI301-KIT<br>链接：<a class=\"link\"   href=\"https://pan.baidu.com/s/1C8kQRwuMBvJTQuTrBYgwxQ\" >https://pan.baidu.com/s/1C8kQRwuMBvJTQuTrBYgwxQ <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a><br>提取码：xmu1</p>\n",
            "tags": [
                "rm"
            ]
        }
    ]
}
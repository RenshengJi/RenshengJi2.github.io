<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://RenshengJi.github.io</id>
    <title>人生几何 • Posts by &#34;rm&#34; category</title>
    <link href="https://RenshengJi.github.io" />
    <updated>2023-04-24T06:28:13.000Z</updated>
    <category term="php" />
    <category term="rm" />
    <entry>
        <id>https://renshengji.github.io/2023/04/24/rm-1/</id>
        <title>中心投影！</title>
        <link rel="alternate" href="https://renshengji.github.io/2023/04/24/rm-1/"/>
        <content type="html">&lt;link rel=&#34;stylesheet&#34; class=&#34;aplayer-secondary-style-marker&#34; href=&#34;/assets/css/APlayer.min.css&#34;&gt;&lt;script src=&#34;/assets/js/APlayer.min.js&#34; class=&#34;aplayer-secondary-script-marker&#34;&gt;&lt;/script&gt;&lt;p&gt;由于工业相机所拍摄图片实际上是三维空间-&amp;gt;二维成像平面的&lt;strong&gt;中心投影&lt;/strong&gt;而不是平心投影，故原有的很多&lt;strong&gt;先验条件&lt;/strong&gt;（灯条识别与灯条匹配）是不成立的。&lt;/p&gt;
&lt;p&gt;以下为失效的先验条件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;判断两个灯条的相对位置，源码如下：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;C++&#34;&gt;&lt;figure class=&#34;iseeu highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/*  该指标的含义为：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * 	1. 先将两个灯条的中心点垂直映射到 两个灯条的平均方向上的直线上&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * 	2. 然后计算两个灯条的中心点在这条直线上的投影距离&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;float&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Offset&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; Light&amp;amp; x, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; Light&amp;amp; y)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;float&lt;/span&gt; angle = &lt;span class=&#34;built_in&#34;&gt;Verticality&lt;/span&gt;(x, y) * CV_PI / &lt;span class=&#34;number&#34;&gt;180.0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;/* 灯条中心偏移向量 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;float&lt;/span&gt; dx = y.rect.center.x - x.rect.center.x;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;float&lt;/span&gt; dy = y.rect.center.y - x.rect.center.y;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;abs&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;cos&lt;/span&gt;(angle) * &lt;span class=&#34;built_in&#34;&gt;abs&lt;/span&gt;(dx) - &lt;span class=&#34;built_in&#34;&gt;sin&lt;/span&gt;(angle) * &lt;span class=&#34;built_in&#34;&gt;abs&lt;/span&gt;(dy));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// return abs(cos(angle) * dx - sin(angle) * dy);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;失效原因&lt;/strong&gt;：虽然说在实际的三维立体世界中，上述条件是肯定有效的，但是，我们是在二维成像平面中去判断的，即使从三维空间-&amp;gt;二维成像平面的过程是平行投影，这个条件也不成立，更何况是中心投影了！&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;失效后果&lt;/strong&gt;：本来这个先验条件的设置应该是为了过滤掉如下图所示的情况，实际情况可能也还好，但是这样的话，由于这个先验条件本来就是错误的，它并不能正确有效的反映出二维平面投影下装甲板的真实特征，所以有一些正确的灯条匹配会因为这个&lt;strong&gt;错误的先验条件&lt;/strong&gt;而被过滤！！&lt;/p&gt;
&lt;img  
                     lazyload
                     src=&#34;/images/loading.svg&#34;
                     data-src=&#34;/images/IMG_3941.jpg&#34;
                      alt=&#34;IMG_3941&#34; style=&#34;zoom:50%;&#34; 
                &gt;

&lt;p&gt;&lt;strong&gt;解决方案&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;a) 直接使用类似上交的四点模型，进行纯深度学习识别，完全抛弃传统视觉，直接避开这个问题？&lt;/p&gt;
&lt;p&gt;b) 读君神的代码（因为现在已知君神的代码是使用的纯传统视觉），或者说直接询问，看看他是这么解决的！&lt;/p&gt;
&lt;p&gt;c) 继续使用现有方案，但是要将阈值调到一个合适的值（能过滤掉大部分假装甲板，又不至于将大量的真装甲板过滤掉！）&lt;/p&gt;
&lt;p&gt;d) 训练一个良好的神经网络，其输出能够大致保证框且仅框出一个装甲板，这样的话我们发现就不需要保留这个先验条件了（因为这个先验条件所解决的问题已经不会出现了，所以这个先验条件也可以随之消失了！！）&lt;/p&gt;
</content>
        <category term="rm" />
        <updated>2023-04-24T06:28:13.000Z</updated>
    </entry>
    <entry>
        <id>https://renshengji.github.io/2023/04/04/NX/</id>
        <title>NX刷机教程</title>
        <link rel="alternate" href="https://renshengji.github.io/2023/04/04/NX/"/>
        <content type="html">&lt;link rel=&#34;stylesheet&#34; class=&#34;aplayer-secondary-style-marker&#34; href=&#34;/assets/css/APlayer.min.css&#34;&gt;&lt;script src=&#34;/assets/js/APlayer.min.js&#34; class=&#34;aplayer-secondary-script-marker&#34;&gt;&lt;/script&gt;&lt;p&gt;直接上结论：使用售后客服的方案awa&lt;br&gt;AI301-KIT&lt;br&gt;链接：&lt;a class=&#34;link&#34;   href=&#34;https://pan.baidu.com/s/1C8kQRwuMBvJTQuTrBYgwxQ&#34; &gt;https://pan.baidu.com/s/1C8kQRwuMBvJTQuTrBYgwxQ &lt;i class=&#34;fa-regular fa-arrow-up-right-from-square fa-sm&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;提取码：xmu1&lt;/p&gt;
</content>
        <category term="rm" />
        <updated>2023-04-04T15:48:03.000Z</updated>
    </entry>
</feed>
